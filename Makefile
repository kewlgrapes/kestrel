# Makefile : File dependencies for Kestrel compiler

# make           - build the Kestrel compiler
# make testlex   - build the lexical test framework
# make testparse - build the parsing test framework
# make clean     - delete extra files generated by make

# configuration options
CC = c++
CFLAGS = -c
LFLAGS =

# directories...
BIN = bin
SRC = src
OBJ = obj

# lexical dependencies
LEX_DEPS = locale stringpool symboltable punctuation keywords lexical
LEX_SRCS = $(LEX_DEPS:%=$(SRC)/%.cpp)
LEX_OBJS = $(LEX_DEPS:%=$(OBJ)/%.o)

# parser dependencies
PARSE_DEPS = blocks expressions types declarations statements
PARSE_SRCS = $(PARSE_DEPS:%=$(SRC)/%.cpp) 
PARSE_OBJS = $(PARSE_DEPS:%=$(OBJ)/%.o)


# executable targets
kestrel: $(OBJ)/kestrel.o
	$(CC) $(LFLAGS) $(OBJ)/kestrel.o $(LEX_OBJS) $(PARSE_OBJS) -o $(BIN)/kestrel

testlex: $(OBJ)/testlex.o
	$(CC) $(LFLAGS) $(OBJ)/testlex.o $(LEX_OBJS) -o $(BIN)/testlex

testparse: $(OBJ)/testparse.o
	$(CC) $(LFLAGS) $(OBJ)/testparse.o $(LEX_OBJS) $(PARSE_OBJS) -o $(BIN)/testparse


# executable target objects
$(OBJ)/kestrel.o: $(SRC)/kestrel.cpp $(LEX_OBJS) $(PARSE_OBJS)
	$(CC) $(CFLAGS) $(SRC)/kestrel.cpp -o $(OBJ)/kestrel.o

$(OBJ)/testlex.o: $(SRC)/testlex.cpp $(LEX_OBJS) 
	$(CC) $(CFLAGS) $(SRC)/testlex.cpp -o $(OBJ)/testlex.o

$(OBJ)/testparse.o: $(SRC)/testparse.cpp $(LEX_OBJS) $(PARSE_OBJS)
	$(CC) $(CFLAGS) $(SRC)/testparse.cpp -o $(OBJ)/testparse.o


# lexical objects
$(OBJ)/lexical.o: $(LEX_SRCS) $(SRC)/config.h
	$(CC) $(CFLAGS) $(SRC)/lexical.cpp -o $(OBJ)/lexical.o

$(OBJ)/locale.o: $(SRC)/locale.cpp
	$(CC) $(CFLAGS) $(SRC)/locale.cpp -o $(OBJ)/locale.o

$(OBJ)/punctuation.o: $(SRC)/punctuation.cpp
	$(CC) $(CFLAGS) $(SRC)/punctuation.cpp -o $(OBJ)/punctuation.o

$(OBJ)/stringpool.o: $(SRC)/stringpool.cpp
	$(CC) $(CFLAGS) $(SRC)/stringpool.cpp -o $(OBJ)/stringpool.o

$(OBJ)/keywords.o: $(SRC)/keywords.cpp
	$(CC) $(CFLAGS) $(SRC)/keywords.cpp -o $(OBJ)/keywords.o

$(OBJ)/symboltable.o: $(SRC)/symboltable.cpp
	$(CC) $(CFLAGS) $(SRC)/symboltable.cpp -o $(OBJ)/symboltable.o


# parser objects
$(OBJ)/blocks.o: $(SRC)/blocks.cpp
	$(CC) $(CFLAGS) $(SRC)/blocks.cpp -o $(OBJ)/blocks.o

$(OBJ)/expressions.o: $(SRC)/expressions.cpp
	$(CC) $(CFLAGS) $(SRC)/expressions.cpp -o $(OBJ)/expressions.o

$(OBJ)/declarations.o: $(SRC)/declarations.cpp
	$(CC) $(CFLAGS) $(SRC)/declarations.cpp -o $(OBJ)/declarations.o

$(OBJ)/statements.o: $(SRC)/statements.cpp
	$(CC) $(CFLAGS) $(SRC)/statements.cpp -o $(OBJ)/statements.o

$(OBJ)/types.o: $(SRC)/types.cpp
	$(CC) $(CFLAGS) $(SRC)/types.cpp -o $(OBJ)/types.o


# clean up 
clean:
	rm obj/*.o
